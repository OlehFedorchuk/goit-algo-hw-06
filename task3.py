import networkx as nx
import matplotlib.pyplot as plt

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –≥—Ä–∞—Ñ
G = nx.Graph()

# –í–µ—Ä—à–∏–Ω–∏ (–∑—É–ø–∏–Ω–∫–∏)
stops = [
    "–¶–µ–Ω—Ç—Ä", "–ó–∞–ª—ñ–∑–Ω–∏—á–Ω–∏–π –≤–æ–∫–∑–∞–ª", "–£–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç", "–ü–ª–æ—â–∞ –†–∏–Ω–æ–∫",
    "–ü–∞—Ä–∫", "–¢–µ–∞—Ç—Ä", "–°—Ç–∞–¥—ñ–æ–Ω", "–¢–¶ –§–æ—Ä—É–º", "–û–±–ª–∞—Å–Ω–∞ –ª—ñ–∫–∞—Ä–Ω—è"
]
G.add_nodes_from(stops)

# –†–µ–±—Ä–∞ –∑ –≤–∞–≥–∞–º–∏ (–≤—ñ–¥—Å—Ç–∞–Ω—å —É —Ö–≤–∏–ª–∏–Ω–∞—Ö)
weighted_edges = [
    ("–¶–µ–Ω—Ç—Ä", "–ü–ª–æ—â–∞ –†–∏–Ω–æ–∫", 5),
    ("–¶–µ–Ω—Ç—Ä", "–£–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç", 7),
    ("–¶–µ–Ω—Ç—Ä", "–¢–¶ –§–æ—Ä—É–º", 10),
    ("–£–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç", "–ó–∞–ª—ñ–∑–Ω–∏—á–Ω–∏–π –≤–æ–∫–∑–∞–ª", 8),
    ("–£–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç", "–¢–µ–∞—Ç—Ä", 6),
    ("–ü–ª–æ—â–∞ –†–∏–Ω–æ–∫", "–ü–∞—Ä–∫", 4),
    ("–ü–∞—Ä–∫", "–û–±–ª–∞—Å–Ω–∞ –ª—ñ–∫–∞—Ä–Ω—è", 9),
    ("–¢–µ–∞—Ç—Ä", "–°—Ç–∞–¥—ñ–æ–Ω", 5),
    ("–¢–¶ –§–æ—Ä—É–º", "–ó–∞–ª—ñ–∑–Ω–∏—á–Ω–∏–π –≤–æ–∫–∑–∞–ª", 6),
    ("–°—Ç–∞–¥—ñ–æ–Ω", "–û–±–ª–∞—Å–Ω–∞ –ª—ñ–∫–∞—Ä–Ω—è", 7),
]

G.add_weighted_edges_from(weighted_edges)
plt.figure(figsize=(12, 7))
pos = nx.spring_layout(G, seed=42)
nx.draw(G, pos, with_labels=True, node_color='lightblue', node_size=1500, font_size=10, edge_color='gray')
edge_labels = nx.get_edge_attributes(G, 'weight')
nx.draw_networkx_edge_labels(G, pos, edge_labels=edge_labels)
plt.title("–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞ –º–µ—Ä–µ–∂–∞ –∑ –≤–∞–≥–∞–º–∏ (–≤ —Ö–≤–∏–ª–∏–Ω–∞—Ö)")
plt.show()
# –ó–Ω–∞—Ö–æ–¥–∏–º–æ –Ω–∞–π–∫–æ—Ä–æ—Ç—à—ñ —à–ª—è—Ö–∏ –º—ñ–∂ —É—Å—ñ–º–∞ –ø–∞—Ä–∞–º–∏ –≤–µ—Ä—à–∏–Ω
all_shortest_paths = dict(nx.all_pairs_dijkstra_path(G, weight='weight'))
all_shortest_lengths = dict(nx.all_pairs_dijkstra_path_length(G, weight='weight'))

# –í–∏–≤–æ–¥–∏–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
for start in G.nodes:
    print(f"\nüîπ –ù–∞–π–∫–æ—Ä–æ—Ç—à—ñ —à–ª—è—Ö–∏ –≤—ñ–¥ '{start}':")
    for end in G.nodes:
        if start != end:
            path = all_shortest_paths[start][end]
            length = all_shortest_lengths[start][end]
            print(f"  –¥–æ '{end}': —à–ª—è—Ö = {path}, –¥–æ–≤–∂–∏–Ω–∞ = {length} —Ö–≤")